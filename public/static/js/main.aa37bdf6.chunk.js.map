{"version":3,"sources":["components/auth/auth-service.js","components/auth/protected-routes.js","components/projects/AddProject.js","components/projects/ProjectList.js","components/navbar/NavBar.js","components/projects/EditProject.js","components/tasks/AddTask.js","components/projects/ProjectDetails.js","components/tasks/TaskDetails.js","components/auth/Signup.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signUp","username","password","service","post","then","response","data","loggedin","get","login","logout","axios","create","baseURL","concat","process","withCredentials","protectedRoute","_ref","Component","component","user","rest","objectWithoutProperties","console","log","objectSpread","react_default","a","createElement","react_router","assign","render","props","loggedInUser","to","pathname","state","from","location","AddProject","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","title","description","getData","setState","catch","error","handleChange","_event$target","target","name","value","defineProperty","_this2","onSubmit","type","onChange","e","ProjectList","getAllProjects","responseFromApi","listOfProjects","style","width","float","map","project","key","_id","react_router_dom","tasks","task","index","projects_AddProject","NavBar","logoutUser","getUser","nextProps","userInSession","className","textDecoration","onClick","EditProject","put","theProject","getTheProject","history","push","handleChangeTitle","handleChangeDesc","AddTask","projectID","toggleForm","isShowing","showAddTaskForm","ProjectDetails","getSingleProject","params","match","id","err","renderEditForm","projects_EditProject","deleteProject","delete","renderAddTaskForm","tasks_AddTask","ownershipCheck","owner","length","TaskDetails","getTheTask","taskId","theTask","SignUp","newUser","errorMsg","message","Login","App","fetchUser","getTheUser","userObj","navbar_NavBar","react","exact","path","projects_ProjectDetails","Signup","auth_Login","protected_routes","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa37bdf6.chunk.js","sourcesContent":["// auth/auth-service.js\n\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`,\n      withCredentials: true\n    });\n  }\n\n  signUp = (username, password) => {\n    return this.service.post('/signup', { username, password })\n      .then(response => response.data)\n      // .catch(error => console.log(error))\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute = ({ component: Component, user, ...rest }) => {\n  console.log({ component: Component, user, ...rest })\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (user) {\n          return <Component {...props} loggedInUser={user} />\n        } else {\n          return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n        }\n      }\n      }\n    />\n  )\n}\nexport default protectedRoute;","// components/projects/AddProject.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n\n    axios.post(`${process.env.REACT_APP_API_URL}/api/projects`, { title, description }, { withCredentials: true })\n      .then(response => {\n        this.props.getData();\n        this.setState({ title: \"\", description: \"\" });\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChange(e)} />\n          <label>Description:</label>\n          <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddProject;","// components/projects/ProjectList.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport AddProject from './AddProject';\n\nclass ProjectList extends Component {\n  constructor() {\n    super();\n    this.state = { listOfProjects: [] };\n  }\n\n  getAllProjects = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/projects`, { withCredentials: true })\n      .then(responseFromApi => {\n        console.log(responseFromApi)\n        this.setState({\n          listOfProjects: responseFromApi.data\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getAllProjects();\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ width: '60%', float: \"left\" }}>\n          {this.state.listOfProjects.map(project => {\n            return (\n              <div key={project._id}>\n                <Link to={`/projects/${project._id}`}>\n                  <h3>{project.title}</h3>\n                </Link>\n                {/* <p style={{maxWidth: '400px'}} >{project.description} </p> */}\n                <ul>\n                  {project.tasks.map((task, index) => {\n                    return <li key={index}>{task.title}</li>\n                  })}\n                </ul>\n              </div>\n            )\n          })\n          }\n        </div>\n        <div style={{ width: '40%', float: \"right\" }}>\n          <AddProject getData={() => this.getAllProjects()} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProjectList;","// components/navbar/Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../auth/auth-service';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: null\n    }\n    this.service = new AuthService\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      ...this.state,\n      loggedInUser: nextProps.userInSession\n    })\n  }\n\n  logoutUser = () => {\n    this.service.logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n        this.props.getUser(null);\n      })\n  }\n\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li>Welcome, {this.state.loggedInUser.username}</li>\n            <li>\n              <Link to='/projects' style={{ textDecoration: 'none' }}>Projects</Link>\n            </li>\n            <li>\n              <Link to='/'>\n                <button onClick={() => this.logoutUser()}>Logout</button>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li><Link to='/' style={{ textDecoration: 'none' }}>Login</Link></li>\n              <li><Link to='/signup' style={{ textDecoration: 'none' }}>Signup</Link></li>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n  }\n}\n\nexport default NavBar;","// components/projects/EditProject.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.theProject.title,\n      description: this.props.theProject.description\n    }\n  }\n\n\n  handleFormSubmit = (event) => {\n    const title = this.state.title;\n    const description = this.state.description;\n\n    event.preventDefault();\n\n    axios.put(`${process.env.REACT_APP_API_URL}/api/projects/${this.props.theProject._id}`, { title, description }, { withCredentials: true })\n      .then(() => {\n        this.props.getTheProject();\n        // after submitting the form, redirect to '/projects'\n        this.props.history.push('/projects');\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChangeTitle = (event) => {\n    this.setState({\n      title: event.target.value\n    })\n  }\n\n  handleChangeDesc = (event) => {\n    this.setState({\n      description: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <h3>Edit form</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChangeTitle(e)} />\n          <label>Description:</label>\n          <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChangeDesc(e)} />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditProject;","// components/tasks/AddTask.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n  constructor(props){\n      super(props);          //             will help us to toggle add task form   \n                            //                      |\n      this.state = { title: \"\", description: \"\", isShowing: false };\n  }\n   \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n                                                // it has to be the 'id' because we are referencing project \n                                                // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n    \n    // { title, description, projectID } => this is 'req.body' that will be received on the server side in this route, \n    // so the names have to match\n    axios.post(`${process.env.REACT_APP_API_URL}/api/tasks`, { title, description, projectID })\n    .then(() => {\n          // after submitting the form, retrieve project one more time so the new task is displayed as well \n          //              |\n        this.props.getTheProject();\n        this.setState({title: \"\", description: \"\"});\n    })\n    .catch(error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n  }\n\n  toggleForm = () => {\n      if(!this.state.isShowing){\n          this.setState({isShowing: true});\n      } else {\n        this.setState({isShowing: false});\n      }\n  }\n\n  showAddTaskForm = () => {\n    if(this.state.isShowing){\n        return(\n            <div>\n                  <h3>Add Task</h3>\n                  <form onSubmit={this.handleFormSubmit}>\n                  <label>Title:</label>\n                  <input type=\"text\" name=\"title\" value={this.state.title} onChange={ e => this.handleChange(e)}/>\n                  <label>Description:</label>\n                  <textarea name=\"description\" value={this.state.description} onChange={ e => this.handleChange(e)} />\n                  \n                  <input type=\"submit\" value=\"Submit\" />\n                  </form>\n            </div>\n          )\n    }\n  }\n\n  render(){\n    return(\n      <div>\n            <hr />\n            <button onClick={() => this.toggleForm()}> Add task </button>\n            { this.showAddTaskForm() }\n      </div>\n    )\n  }\n}\n\nexport default AddTask;","// components/projects/ProjectDetails.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport EditProject from './EditProject';\nimport AddTask from '../tasks/AddTask';\n\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getSingleProject();\n  }\n\n  getSingleProject = () => {\n    const { params } = this.props.match;\n    axios.get(`${process.env.REACT_APP_API_URL}/api/projects/${params.id}`, { withCredentials: true })\n      .then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        this.setState(theProject);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  renderEditForm = () => {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      //                                                    {...props} => so we can have 'this.props.history' in Edit.js\n      //                                                                                          ^\n      //                                                                                          |\n      return <EditProject theProject={this.state} getTheProject={this.getSingleProject} {...this.props} />\n\n    }\n  }\n\n  // DELETE PROJECT:\n  deleteProject = () => {\n    const { params } = this.props.match;\n    axios.delete(`http://localhost:5000/api/projects/${params.id}`, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/projects'); // !!!         \n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  renderAddTaskForm = () => {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      // pass the project and method getSingleProject() as a props down to AddTask component\n      return <AddTask theProject={this.state} getTheProject={this.getSingleProject} />\n    }\n  }\n\n  ownershipCheck = project => {\n    if (this.props.loggedInUser && project.owner === this.props.loggedInUser._id) {\n      return (\n        <div>\n          <div>{this.renderEditForm()} </div>\n          <button onClick={() => this.deleteProject(this.state._id)}>Delete project</button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n        {/* show the task heading only if there are tasks */}\n        {this.state.tasks && this.state.tasks.length > 0 && <h3>Tasks </h3>}\n        {/* map through the array of tasks and... */}\n        {this.state.tasks && this.state.tasks.map((task, index) => {\n          return (\n            <div key={index}>\n              {/* ... make each task's title a link that goes to the task details page */}\n              <Link to={`/projects/${this.state._id}/tasks/${task._id}`}>\n                {task.title}\n              </Link>\n            </div>\n          )\n\n        })\n        }\n        <div>\n          {this.ownershipCheck(this.state)}\n        </div>\n        <br />\n        <div>{this.renderAddTaskForm()} </div>\n        <br /><br /><br /><br /><br />\n        <Link to={'/projects'}>Back to projects</Link>\n      </div>\n    )\n  }\n}\n\nexport default ProjectDetails;","// components/tasks/TaskDetails.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass TaskDetails extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount(){\n    this.getTheTask();\n  }\n\n  getTheTask = () => {\n    const { params } = this.props.match;\n    axios.get(`${process.env.REACT_APP_API_URL}/api/projects/${params.id}/tasks/${params.taskId}`)\n    .then( responseFromApi =>{\n      const theTask = responseFromApi.data;\n      this.setState(theTask);\n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n      </div>\n    )\n  }\n}\n\nexport default TaskDetails;","// auth/Signup.js\n\nimport React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      username: '',\n      password: '',\n      errorMsg: null\n    };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.signUp(username, password)\n      .then(newUser => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        this.props.getUser(newUser)\n      })\n      .catch(error => {\n        // console.log(`no dounut for you ${error}`, error.response.data)\n        this.setState({\n          errorMsg: `${error.response.data.message}`\n        })\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>{this.state.errorMsg}</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Sign Up\" />\n        </form>\n\n        <p>Already have account?\n          <Link to={\"/\"}> Login</Link>\n        </p>\n\n      </div>\n    )\n  }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response)\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>Don't have account?\n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport AuthService from './components/auth/auth-service';\nimport ProtectedRoute from './components/auth/protected-routes';\nimport ProjectList from './components/projects/ProjectList';\nimport NavBar from './components/navbar/NavBar';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport SignUp from './components/auth/Signup';\nimport Login from './components/auth/Login';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loggedInUser: null\n    }\n    this.service = new AuthService();\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this.service.loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          })\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          })\n        })\n    }\n  }\n\n  getTheUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n\n  render() {\n    this.fetchUser()\n    return (\n      <div className=\"App\">\n        <NavBar userInSession={this.state.loggedInUser} getUser={this.getTheUser} />\n        <Switch>\n          {(!this.state.loggedInUser) ?\n            (\n              <Fragment>\n                <Route exact path='/signup' render={() => <SignUp getUser={this.getTheUser} />} />\n                <Route exact path='/' render={() => <Login getUser={this.getTheUser} />} />\n                <ProtectedRoute user={this.state.loggedInUser} path=\"/projects\" component={ProjectList} />\n                <ProtectedRoute user={this.state.loggedInUser} path='/projects/:id' component={ProjectDetails} />\n              </Fragment>\n            )\n            :\n            (\n              <Fragment>\n                <Route exact path=\"/projects\" component={ProjectList} />\n                <Route exact path=\"/projects/:id\" render={(props) => <ProjectDetails loggedInUser={this.state.loggedInUser} {...props} />} />\n                <Route exact path=\"/projects/:id/tasks/:taskId\" component={TaskDetails} />\n              </Fragment>\n            )\n          }\n        </Switch>\n      </div>\n\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}